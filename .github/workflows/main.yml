name: Release new version

on:
  push:
    branches:
      - main

jobs:
  windows-linux:
    runs-on: windows-latest

    steps:
      - name: disable auto crlf
        run: git config --global core.autocrlf false
        
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4.0.2

      - name: Get current version
        id: get_version
        run: |
          echo "::set-output name=version::$(node -p "require('./package.json').version")"

      - name: Check if release needed
        id: check_release
        run: |
          try {
          $LATEST_VERSION = (Invoke-WebRequest -Uri "https://api.github.com/repos/${{ github.repository }}/releases/latest").Content | ConvertFrom-Json | Select-Object -ExpandProperty tag_name -First 1
          if ($LATEST_VERSION -ne "${{ steps.get_version.outputs.version }}") {
            echo "::set-output name=release_needed::true"
          } else {
            echo "::set-output name=release_needed::false"
          }
          }
          catch {
            echo "::set-output name=release_needed::true"
          }

      - name: Install dependencies and build releases
        if: steps.check_release.outputs.release_needed == 'true'
        run: |
          npm i
          npx eslint --fix
          npm run release

      - name: Zip Windows unpacked
        if: steps.check_release.outputs.release_needed == 'true'
        run: |
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          [System.IO.Compression.ZipFile]::CreateFromDirectory('releases/win32/x64/win-unpacked', './final/win-unpacked.zip')

      - name: Zip Linux unpacked
        if: steps.check_release.outputs.release_needed == 'true'
        run: |
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          [System.IO.Compression.ZipFile]::CreateFromDirectory('releases/win32/x64/linux-unpacked', './final/linux-unpacked.zip')

      - name: Finalize Squirrel.exe
        if: steps.check_release.outputs.release_needed == 'true'
        run: cp releases/win32/x64/squirrel-windows/*.exe "./final/Extensio setup.exe"

      - name: Create release
        uses: softprops/action-gh-release@v2
        if: steps.check_release.outputs.release_needed == 'true'
        with: 
          generate_release_notes: true
          tag_name: ${{ steps.get_version.outputs.version }}

      - name: Upload release assets
        uses: fnkr/github-action-ghr@v1.3
        with:
          GHR_PATH: "./final"
